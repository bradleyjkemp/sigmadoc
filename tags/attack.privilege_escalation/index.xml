<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>attack.privilege_escalation on My New Hugo Site</title><link>https://bradleyjkemp.dev/sigmadoc/tags/attack.privilege_escalation/</link><description>Recent content in attack.privilege_escalation on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Sep 2020 21:19:04 +0530</lastBuildDate><atom:link href="https://bradleyjkemp.dev/sigmadoc/tags/attack.privilege_escalation/index.xml" rel="self" type="application/rss+xml"/><item><title>COM Hijack via Sdclt</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_comhijack_sdclt.yml/</link><pubDate>Sun, 27 Sep 2020 21:19:04 +0530</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_comhijack_sdclt.yml/</guid><description>&lt;p>Detects changes to &amp;lsquo;HKCU\Software\Classes\Folder\shell\open\command\DelegateExecute&amp;rsquo;&lt;/p></description></item><item><title>Vulnerable Netlogon Secure Channel Connection Allowed</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_vul_cve_2020_1472.yml/</link><pubDate>Tue, 15 Sep 2020 15:13:53 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_vul_cve_2020_1472.yml/</guid><description>&lt;p>Detects that a vulnerable Netlogon secure channel connection was allowed, which could be an indicator of CVE-2020-1472.&lt;/p></description></item><item><title>Webshell Recon Detection Via CommandLine &amp; Processes</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_webshell_recon_detection.yml/</link><pubDate>Wed, 22 Jul 2020 09:05:50 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_webshell_recon_detection.yml/</guid><description>&lt;p>Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.&lt;/p></description></item><item><title>Avusing Azure Browser SSO</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_abusing_azure_browser_sso.yml/</link><pubDate>Wed, 15 Jul 2020 14:02:34 +0300</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_abusing_azure_browser_sso.yml/</guid><description>&lt;p>Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser. An attacker can use this to authenticate to Azure AD in a browser as that user.&lt;/p></description></item><item><title>Malicious Service Installations</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_mal_service_installs.yml/</link><pubDate>Sun, 16 Feb 2020 23:24:00 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_mal_service_installs.yml/</guid><description>&lt;p>Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity&lt;/p></description></item><item><title>Wsreset UAC Bypass</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_wsreset_uac_bypass.yml/</link><pubDate>Thu, 30 Jan 2020 18:05:47 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_wsreset_uac_bypass.yml/</guid><description>&lt;p>Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC&lt;/p></description></item><item><title>Audit CVE Event</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_audit_cve.yml/</link><pubDate>Wed, 15 Jan 2020 21:23:32 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_audit_cve.yml/</guid><description>&lt;p>Detects events generated by Windows to indicate the exploitation of a known vulnerability (e.g. CVE-2020-0601)&lt;/p></description></item><item><title>Suspect Svchost Activity</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_svchost_no_cli.yml/</link><pubDate>Sat, 28 Dec 2019 10:28:08 -0500</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_svchost_no_cli.yml/</guid><description>&lt;p>It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.&lt;/p></description></item><item><title>Exploiting CVE-2019-1388</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_exploit_cve_2019_1388.yml/</link><pubDate>Wed, 20 Nov 2019 09:12:02 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_exploit_cve_2019_1388.yml/</guid><description>&lt;p>Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM&lt;/p></description></item><item><title>RottenPotato Like Attack Pattern</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_susp_rottenpotato.yml/</link><pubDate>Fri, 15 Nov 2019 11:44:18 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_susp_rottenpotato.yml/</guid><description>&lt;p>Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like&lt;/p></description></item><item><title>Exploiting SetupComplete.cmd CVE-2019-1378</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_exploit_cve_2019_1378.yml/</link><pubDate>Fri, 15 Nov 2019 00:26:18 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_exploit_cve_2019_1378.yml/</guid><description>&lt;p>Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378&lt;/p></description></item><item><title>Suspicious Remote Thread Created</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_suspicious_remote_thread.yml/</link><pubDate>Mon, 28 Oct 2019 22:12:57 -0700</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_suspicious_remote_thread.yml/</guid><description>&lt;p>Offensive tradecraft is switching away from using APIs like &amp;ldquo;CreateRemoteThread&amp;rdquo;, however, this is still largely observed in the wild. This rule aims to detect suspicious processes (those we would not expect to behave in this way like word.exe or outlook.exe) creating remote threads on other processes. It is a generalistic rule, but it should have a low FP ratio due to the selected range of processes.&lt;/p></description></item><item><title>Suspicious In-Memory Module Execution</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_in_memory_assembly_execution.yml/</link><pubDate>Mon, 28 Oct 2019 22:07:26 -0700</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_in_memory_assembly_execution.yml/</guid><description>&lt;p>Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display &amp;ldquo;UNKNOWN&amp;rdquo; as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll &amp;ndash;&amp;gt; kernelbase.dll &amp;ndash;&amp;gt; unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.&lt;/p></description></item><item><title>Bypass UAC via CMSTP</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_uac_cmstp.yml/</link><pubDate>Mon, 28 Oct 2019 11:59:49 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_uac_cmstp.yml/</guid><description>&lt;p>Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).&lt;/p></description></item><item><title>Bypass UAC via Fodhelper.exe</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_uac_fodhelper.yml/</link><pubDate>Mon, 28 Oct 2019 11:59:49 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_uac_fodhelper.yml/</guid><description>&lt;p>Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.&lt;/p></description></item><item><title>Bypass UAC via WSReset.exe</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_uac_wsreset.yml/</link><pubDate>Mon, 28 Oct 2019 11:59:49 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_uac_wsreset.yml/</guid><description>&lt;p>Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.&lt;/p></description></item><item><title>Interactive AT Job</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_interactive_at.yml/</link><pubDate>Mon, 28 Oct 2019 11:59:49 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_interactive_at.yml/</guid><description>&lt;p>Detect an interactive AT job, which may be used as a form of privilege escalation&lt;/p></description></item><item><title>Detection of Possible Rotten Potato</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_possible_privilege_escalation_using_rotten_potato.yml/</link><pubDate>Sun, 27 Oct 2019 20:54:07 +0300</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_possible_privilege_escalation_using_rotten_potato.yml/</guid><description>&lt;p>Detection of child processes spawned with SYSTEM privileges by parents with LOCAL SERVICE or NETWORK SERVICE privileges&lt;/p></description></item><item><title>Possible Privilege Escalation via Service Permissions Weakness</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_possible_privilege_escalation_via_service_registry_permissions_weakness.yml/</link><pubDate>Sun, 27 Oct 2019 20:54:07 +0300</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_possible_privilege_escalation_via_service_registry_permissions_weakness.yml/</guid><description>&lt;p>Detect modification of services configuration (ImagePath, FailureCommand and ServiceDLL) in registry by processes with Medium integrity level&lt;/p></description></item><item><title>Possible Privilege Escalation via Weak Service Permissions</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_using_sc_to_change_sevice_image_path_by_non_admin.yml/</link><pubDate>Sun, 27 Oct 2019 20:54:07 +0300</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_using_sc_to_change_sevice_image_path_by_non_admin.yml/</guid><description>&lt;p>Detection of sc.exe utility spawning by user with Medium integrity level to change service ImagePath or FailureCommand&lt;/p></description></item><item><title>Suspicious Service Path Modification</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_service_path_modification.yml/</link><pubDate>Fri, 25 Oct 2019 15:38:47 +0400</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_service_path_modification.yml/</guid><description>&lt;p>Detects service path modification to powershell/cmd&lt;/p></description></item><item><title>Powershell Profile.ps1 Modification</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_suspicious_profile_create.yml/</link><pubDate>Fri, 25 Oct 2019 00:14:21 +0700</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_suspicious_profile_create.yml/</guid><description>&lt;p>Detects a change in profile.ps1 of the Powershell profile&lt;/p></description></item><item><title>Sudo Privilege Escalation CVE-2019-14287</title><link>https://bradleyjkemp.dev/sigmadoc/rules/linux/lnx_sudo_cve_2019_14287.yml/</link><pubDate>Tue, 15 Oct 2019 09:39:08 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/linux/lnx_sudo_cve_2019_14287.yml/</guid><description>&lt;p>Detects users trying to exploit sudo vulnerability reported in CVE-2019-14287&lt;/p></description></item><item><title>Windows 10 Scheduled Task SandboxEscaper 0-day</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_win10_sched_task_0day.yml/</link><pubDate>Wed, 22 May 2019 12:28:42 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_win10_sched_task_0day.yml/</guid><description>&lt;p>Detects Task Scheduler .job import arbitrary DACL write\par&lt;/p></description></item><item><title>CMSTP UAC Bypass via COM Object Access</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_cmstp_com_object_access.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_cmstp_com_object_access.yml/</guid><description>&lt;p>Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects&lt;/p></description></item><item><title>Dridex Process Pattern</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_malware_dridex.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_malware_dridex.yml/</guid><description>&lt;p>Detects typical Dridex process patterns&lt;/p></description></item><item><title>Possible Shim Database Persistence via sdbinst.exe</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_sdbinst_shim_persistence.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_sdbinst_shim_persistence.yml/</guid><description>&lt;p>Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.&lt;/p></description></item><item><title>Scheduled Task Creation</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_schtask_creation.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_schtask_creation.yml/</guid><description>&lt;p>Detects the creation of scheduled tasks in user session&lt;/p></description></item><item><title>Shells Spawned by Web Servers</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_webshell_spawn.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_webshell_spawn.yml/</guid><description>&lt;p>Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack&lt;/p></description></item><item><title>Webshell Detection With Command Line Keywords</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_webshell_detection.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_webshell_detection.yml/</guid><description>&lt;p>Detects certain command line parameters often used during reconnaissance activity via web shells&lt;/p></description></item><item><title>WMI Persistence - Script Event Consumer</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_wmi_persistence_script_event_consumer.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_wmi_persistence_script_event_consumer.yml/</guid><description>&lt;p>Detects WMI script event consumers&lt;/p></description></item><item><title>Default PowerSploit and Empire Schtasks Persistence</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_powersploit_empire_schtasks.yml/</link><pubDate>Sat, 23 Jun 2018 15:45:58 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_powersploit_empire_schtasks.yml/</guid><description>&lt;p>Detects the creation of a schtask via PowerSploit or Empire Default Configuration.&lt;/p></description></item><item><title>Registry Persistence Mechanisms</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_win_reg_persistence.yml/</link><pubDate>Wed, 11 Apr 2018 15:13:00 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_win_reg_persistence.yml/</guid><description>&lt;p>Detects persistence registry keys&lt;/p></description></item><item><title>Sticky Key Like Backdoor Usage</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_stickykey_like_backdoor.yml/</link><pubDate>Thu, 15 Mar 2018 19:53:34 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_stickykey_like_backdoor.yml/</guid><description>&lt;p>Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen&lt;/p></description></item><item><title>Hurricane Panda Activity</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_apt_hurricane_panda.yml/</link><pubDate>Wed, 31 Jan 2018 23:11:37 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_apt_hurricane_panda.yml/</guid><description>&lt;p>Detects Hurricane Panda Activity&lt;/p></description></item><item><title>WMI Persistence</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/other/win_wmi_persistence.yml/</link><pubDate>Tue, 22 Aug 2017 10:02:54 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/other/win_wmi_persistence.yml/</guid><description>&lt;p>Detects suspicious WMI event filter and command line event consumer based on event id 5861 and 5859 (Windows 10, 2012 and higher)&lt;/p></description></item><item><title>UAC Bypass via Event Viewer</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_uac_bypass_eventvwr.yml/</link><pubDate>Sun, 19 Mar 2017 19:34:06 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_uac_bypass_eventvwr.yml/</guid><description>&lt;p>Detects UAC bypass method using Windows event viewer&lt;/p></description></item><item><title>UAC Bypass via Sdclt</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_uac_bypass_sdclt.yml/</link><pubDate>Fri, 17 Mar 2017 14:31:26 -0400</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/sysmon_uac_bypass_sdclt.yml/</guid><description>&lt;p>Detects changes to HKCU:\Software\Classes\exefile\shell\runas\command\isolatedCommand&lt;/p></description></item><item><title>Suspicious Driver Load from Temp</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/driver_load/sysmon_susp_driver_load.yml/</link><pubDate>Sun, 12 Feb 2017 15:50:39 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/driver_load/sysmon_susp_driver_load.yml/</guid><description>&lt;p>Detects a driver load from a temporary directory&lt;/p></description></item><item><title>Failed Logins with Different Accounts from Single Source System</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_susp_failed_logons_single_source.yml/</link><pubDate>Tue, 27 Dec 2016 14:49:54 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_susp_failed_logons_single_source.yml/</guid><description>&lt;p>Detects suspicious failed logins with different user accounts from a single source system&lt;/p></description></item><item><title>Account Tampering - Suspicious Failed Logon Reasons</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_susp_failed_logon_reasons.yml/</link><pubDate>Sat, 24 Dec 2016 12:23:47 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/builtin/win_susp_failed_logon_reasons.yml/</guid><description>&lt;p>This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted.&lt;/p></description></item><item><title>Empire PowerShell UAC Bypass</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_powershell_empire_uac_bypass.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_powershell_empire_uac_bypass.yml/</guid><description>&lt;p>Detects some Empire PowerShell UAC bypass methods&lt;/p></description></item><item><title>Malicious Named Pipe</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_mal_namedpipes.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_mal_namedpipes.yml/</guid><description>&lt;p>Detects the creation of a named pipe used by known APT malware&lt;/p></description></item><item><title>Malware Shellcode in Verclsid Target Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_malware_verclsid_shellcode.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_malware_verclsid_shellcode.yml/</guid><description>&lt;p>Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro&lt;/p></description></item><item><title>Run Whoami as SYSTEM</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_whoami_as_system.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_whoami_as_system.yml/</guid><description>&lt;p>Detects a whoami.exe executed by LOCAL SYSTEM. This may be a sign of a successful local privilege escalation.&lt;/p></description></item><item><title>Suspicious Debugger Registration Cmdline</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_install_reg_debugger_backdoor.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_install_reg_debugger_backdoor.yml/</guid><description>&lt;p>Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).&lt;/p></description></item><item><title>Windows Kernel and 3rd-Party Drivers Exploits Token Stealing</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_kernel_and_3rd_party_drivers_exploits_token_stealing.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_kernel_and_3rd_party_drivers_exploits_token_stealing.yml/</guid><description>&lt;p>Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level&lt;/p></description></item></channel></rss>