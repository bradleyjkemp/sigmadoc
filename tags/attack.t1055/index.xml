<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>attack.t1055 on My New Hugo Site</title><link>https://bradleyjkemp.dev/sigmadoc/tags/attack.t1055/</link><description>Recent content in attack.t1055 on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 May 2020 18:08:30 +0700</lastBuildDate><atom:link href="https://bradleyjkemp.dev/sigmadoc/tags/attack.t1055/index.xml" rel="self" type="application/rss+xml"/><item><title>Notepad Making Network Connection</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/network_connection/sysmon_notepad_network_connection.yml/</link><pubDate>Thu, 14 May 2020 18:08:30 +0700</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/network_connection/sysmon_notepad_network_connection.yml/</guid><description>&lt;p>Detects suspicious network connection by Notepad&lt;/p></description></item><item><title>ZOHO Dctask64 Process Injection</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_dctask64_proc_inject.yml/</link><pubDate>Tue, 28 Jan 2020 11:29:24 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_dctask64_proc_inject.yml/</guid><description>&lt;p>Detects suspicious process injection using ZOHO&amp;rsquo;s dctask64.exe&lt;/p></description></item><item><title>Suspect Svchost Activity</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_svchost_no_cli.yml/</link><pubDate>Sat, 28 Dec 2019 10:28:08 -0500</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_susp_svchost_no_cli.yml/</guid><description>&lt;p>It is extremely abnormal for svchost.exe to spawn without any CLI arguments and is normally observed when a malicious process spawns the process and injects code into the process memory space.&lt;/p></description></item><item><title>Suspicious Remote Thread Created</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_suspicious_remote_thread.yml/</link><pubDate>Mon, 28 Oct 2019 22:12:57 -0700</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_suspicious_remote_thread.yml/</guid><description>&lt;p>Offensive tradecraft is switching away from using APIs like &amp;ldquo;CreateRemoteThread&amp;rdquo;, however, this is still largely observed in the wild. This rule aims to detect suspicious processes (those we would not expect to behave in this way like word.exe or outlook.exe) creating remote threads on other processes. It is a generalistic rule, but it should have a low FP ratio due to the selected range of processes.&lt;/p></description></item><item><title>Suspicious In-Memory Module Execution</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_in_memory_assembly_execution.yml/</link><pubDate>Mon, 28 Oct 2019 22:07:26 -0700</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_in_memory_assembly_execution.yml/</guid><description>&lt;p>Detects the access to processes by other suspicious processes which have reflectively loaded libraries in their memory space. An example is SilentTrinity C2 behaviour. Generally speaking, when Sysmon EventID 10 cannot reference a stack call to a dll loaded from disk (the standard way), it will display &amp;ldquo;UNKNOWN&amp;rdquo; as the module name. Usually this means the stack call points to a module that was reflectively loaded in memory. Adding to this, it is not common to see such few calls in the stack (ntdll.dll &amp;ndash;&amp;gt; kernelbase.dll &amp;ndash;&amp;gt; unknown) which essentially means that most of the functions required by the process to execute certain routines are already present in memory, not requiring any calls to external libraries. The latter should also be considered suspicious.&lt;/p></description></item><item><title>CreateRemoteThread API and LoadLibrary</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_createremotethread_loadlibrary.yml/</link><pubDate>Thu, 24 Oct 2019 14:34:16 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_createremotethread_loadlibrary.yml/</guid><description>&lt;p>Detects potential use of CreateRemoteThread api and LoadLibrary function to inject DLL into a process&lt;/p></description></item><item><title>Dridex Process Pattern</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_malware_dridex.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_malware_dridex.yml/</guid><description>&lt;p>Detects typical Dridex process patterns&lt;/p></description></item><item><title>MavInject Process Injection</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_mavinject_proc_inj.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_mavinject_proc_inj.yml/</guid><description>&lt;p>Detects process injection using the signed Windows tool Mavinject32.exe&lt;/p></description></item><item><title>CobaltStrike Process Injection</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_cobaltstrike_process_injection.yml/</link><pubDate>Fri, 30 Nov 2018 10:25:05 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_cobaltstrike_process_injection.yml/</guid><description>&lt;p>Detects a possible remote threat creation with certain characteristics which are typical for Cobalt Strike beacons&lt;/p></description></item><item><title>Malicious Named Pipe</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_mal_namedpipes.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/sysmon/sysmon_mal_namedpipes.yml/</guid><description>&lt;p>Detects the creation of a named pipe used by known APT malware&lt;/p></description></item><item><title>Malware Shellcode in Verclsid Target Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_malware_verclsid_shellcode.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/sysmon_malware_verclsid_shellcode.yml/</guid><description>&lt;p>Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro&lt;/p></description></item><item><title>TAIDOOR RAT DLL Load</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_apt_taidoor.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/win_apt_taidoor.yml/</guid><description>&lt;p>Detects specific process characteristics of Chinese TAIDOOR RAT malware load&lt;/p></description></item></channel></rss>