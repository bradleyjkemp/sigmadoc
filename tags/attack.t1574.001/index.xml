<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>attack.t1574.001 on My New Hugo Site</title>
    <link>https://bradleyjkemp.dev/sigmadoc/tags/attack.t1574.001/</link>
    <description>Recent content in attack.t1574.001 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Aug 2021 17:47:56 +0530</lastBuildDate><atom:link href="https://bradleyjkemp.dev/sigmadoc/tags/attack.t1574.001/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Powerup Write Hijack DLL</title>
      <link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_detect_powerup_dllhijacking.yml/</link>
      <pubDate>Sat, 21 Aug 2021 17:47:56 +0530</pubDate>
      
      <guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_detect_powerup_dllhijacking.yml/</guid>
      <description>&lt;p&gt;Powerup tool&amp;rsquo;s Write Hijack DLL exploits DLL hijacking for privilege escalation. In it&amp;rsquo;s default mode, it builds a self deleting .bat file which executes malicious command. The detection rule relies on creation of the malicious bat file (debug.bat by default).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Svchost DLL Search Order Hijack</title>
      <link>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_svchost_dll_search_order_hijack.yml/</link>
      <pubDate>Mon, 28 Oct 2019 12:03:03 +0100</pubDate>
      
      <guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_svchost_dll_search_order_hijack.yml/</guid>
      <description>&lt;p&gt;IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\Windows\System32\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services &amp;ldquo;svchost.exe -k netsvcs&amp;rdquo; to gain code execution on a remote machine.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Fax Service DLL Search Order Hijack</title>
      <link>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_susp_fax_dll.yml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_susp_fax_dll.yml/</guid>
      <description>&lt;p&gt;The Fax service attempts to load ualapi.dll, which is non-existent. An attacker can then (side)load their own malicious DLL using this service.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pingback Backdoor</title>
      <link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_pingback_backdoor.yml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_pingback_backdoor.yml/</guid>
      <description>&lt;p&gt;Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pingback Backdoor</title>
      <link>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_pingback_backdoor.yml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_pingback_backdoor.yml/</guid>
      <description>&lt;p&gt;Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pingback Backdoor</title>
      <link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_pingback_backdoor.yml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_pingback_backdoor.yml/</guid>
      <description>&lt;p&gt;Detects the use of Pingback backdoor that creates ICMP tunnel for C2 as described in the trustwave report&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
