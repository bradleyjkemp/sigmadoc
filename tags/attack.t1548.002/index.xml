<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>attack.t1548.002 on My New Hugo Site</title><link>https://bradleyjkemp.dev/sigmadoc/tags/attack.t1548.002/</link><description>Recent content in attack.t1548.002 on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Feb 2022 15:47:44 +0100</lastBuildDate><atom:link href="https://bradleyjkemp.dev/sigmadoc/tags/attack.t1548.002/index.xml" rel="self" type="application/rss+xml"/><item><title>Explorer NOUACCHECK Flag</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_susp_explorer_nouaccheck.yml/</link><pubDate>Wed, 23 Feb 2022 15:47:44 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_susp_explorer_nouaccheck.yml/</guid><description>&lt;p>Detects suspicious starts of explorer.exe that use the /NOUACCHECK flag that allows to run all sub processes of that newly started explorer.exe without any UAC checks&lt;/p></description></item><item><title>UAC Bypass Using ComputerDefaults</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_computerdefaults.yml/</link><pubDate>Tue, 31 Aug 2021 16:23:32 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_computerdefaults.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using computerdefaults.exe (UACMe 59)&lt;/p></description></item><item><title>Shell Open Registry Keys Manipulation</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_shell_open_keys_manipulation.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_shell_open_keys_manipulation.yml/</guid><description>&lt;p>Detects the shell open key manipulation (exefile and ms-settings) used for persistence and the pattern of UAC Bypass using fodhelper.exe, computerdefaults.exe, slui.exe via registry keys (e.g. UACMe 33 or 62)&lt;/p></description></item><item><title>UAC Bypass Abusing Winsat Path Parsing - File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_winsat.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_winsat.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)&lt;/p></description></item><item><title>UAC Bypass Abusing Winsat Path Parsing - Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_winsat.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_winsat.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)&lt;/p></description></item><item><title>UAC Bypass Abusing Winsat Path Parsing - Registry</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_winsat.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_winsat.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using a path parsing issue in winsat.exe (UACMe 52)&lt;/p></description></item><item><title>UAC Bypass Using .NET Code Profiler on MMC</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_dotnet_profiler.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_dotnet_profiler.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using .NET Code Profiler and mmc.exe DLL hijacking (UACMe 39)&lt;/p></description></item><item><title>UAC Bypass Using ChangePK and SLUI</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_changepk_slui.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_changepk_slui.yml/</guid><description>&lt;p>Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)&lt;/p></description></item><item><title>UAC Bypass Using Consent and Comctl32 - File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_consent_comctl32.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_consent_comctl32.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)&lt;/p></description></item><item><title>UAC Bypass Using Consent and Comctl32 - Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_consent_comctl32.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_consent_comctl32.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using consent.exe and comctl32.dll (UACMe 22)&lt;/p></description></item><item><title>UAC Bypass Using Disk Cleanup</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_cleanmgr.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_cleanmgr.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using scheduled tasks and variable expansion of cleanmgr.exe (UACMe 34)&lt;/p></description></item><item><title>UAC Bypass Using DismHost</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_dismhost.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_dismhost.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using DismHost DLL hijacking (UACMe 63)&lt;/p></description></item><item><title>UAC Bypass Using IEInstal - File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_ieinstal.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_ieinstal.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)&lt;/p></description></item><item><title>UAC Bypass Using IEInstal - Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_ieinstal.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_ieinstal.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)&lt;/p></description></item><item><title>UAC Bypass Using MSConfig Token Modification - File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_msconfig_gui.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_msconfig_gui.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)&lt;/p></description></item><item><title>UAC Bypass Using MSConfig Token Modification - Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_msconfig_gui.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_msconfig_gui.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)&lt;/p></description></item><item><title>UAC Bypass Using NTFS Reparse Point - File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_ntfs_reparse_point.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_ntfs_reparse_point.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)&lt;/p></description></item><item><title>UAC Bypass Using NTFS Reparse Point - Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_ntfs_reparse_point.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_ntfs_reparse_point.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using NTFS reparse point and wusa.exe DLL hijacking (UACMe 36)&lt;/p></description></item><item><title>UAC Bypass Using PkgMgr and DISM</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_pkgmgr_dism.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_pkgmgr_dism.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using pkgmgr.exe and dism.exe (UACMe 23)&lt;/p></description></item><item><title>UAC Bypass Using Windows Media Player - File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_wmp.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/file_event/file_event_win_uac_bypass_wmp.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)&lt;/p></description></item><item><title>UAC Bypass Using Windows Media Player - Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_wmp.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_wmp.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)&lt;/p></description></item><item><title>UAC Bypass Using Windows Media Player - Registry</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_wmp.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_wmp.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll (UACMe 32)&lt;/p></description></item><item><title>UAC Bypass Using WOW64 Logger DLL Hijack</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/proc_access_win_uac_bypass_wow64_logger.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/proc_access_win_uac_bypass_wow64_logger.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using a WoW64 logger DLL hijack (UACMe 30)&lt;/p></description></item><item><title>UAC Bypass WSReset</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_wsreset.yml/</link><pubDate>Tue, 31 Aug 2021 12:45:07 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_bypass_wsreset.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config&lt;/p></description></item><item><title>TrustedPath UAC Bypass Pattern</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_susp_uac_bypass_trustedpath.yml/</link><pubDate>Fri, 27 Aug 2021 18:12:21 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_susp_uac_bypass_trustedpath.yml/</guid><description>&lt;p>Detects indicators of a UAC bypass method by mocking directories&lt;/p></description></item><item><title>Wsreset UAC Bypass</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_wsreset_uac_bypass.yml/</link><pubDate>Thu, 30 Jan 2020 18:05:47 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_wsreset_uac_bypass.yml/</guid><description>&lt;p>Detects a method that uses Wsreset.exe tool that can be used to reset the Windows Store to bypass UAC&lt;/p></description></item><item><title>Bypass UAC via CMSTP</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_cmstp.yml/</link><pubDate>Mon, 28 Oct 2019 11:59:49 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_cmstp.yml/</guid><description>&lt;p>Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).&lt;/p></description></item><item><title>Bypass UAC via Fodhelper.exe</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_fodhelper.yml/</link><pubDate>Mon, 28 Oct 2019 11:59:49 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_fodhelper.yml/</guid><description>&lt;p>Identifies use of Fodhelper.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.&lt;/p></description></item><item><title>Bypass UAC via WSReset.exe</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_wsreset.yml/</link><pubDate>Mon, 28 Oct 2019 11:59:49 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_uac_wsreset.yml/</guid><description>&lt;p>Identifies use of WSReset.exe to bypass User Account Control. Adversaries use this technique to execute privileged processes.&lt;/p></description></item><item><title>CMSTP UAC Bypass via COM Object Access</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_cmstp_com_object_access.yml/</link><pubDate>Wed, 16 Jan 2019 23:36:31 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_cmstp_com_object_access.yml/</guid><description>&lt;p>Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)&lt;/p></description></item><item><title>UAC Bypass via Event Viewer</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_eventvwr.yml/</link><pubDate>Sun, 19 Mar 2017 19:34:06 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_eventvwr.yml/</guid><description>&lt;p>Detects UAC bypass method using Windows event viewer&lt;/p></description></item><item><title>UAC Bypass via Sdclt</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_sdclt.yml/</link><pubDate>Fri, 17 Mar 2017 14:31:26 -0400</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_uac_bypass_sdclt.yml/</guid><description>&lt;p>Detects the pattern of UAC Bypass using registry key manipulation of sdclt.exe (e.g. UACMe 53)&lt;/p></description></item><item><title>Always Install Elevated MSI Spawned Cmd And Powershell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_always_install_elevated_msi_spawned_cmd_powershell.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_always_install_elevated_msi_spawned_cmd_powershell.yml/</guid><description>&lt;p>This rule looks for Windows Installer service (msiexec.exe) spawned command line and/or powershell&lt;/p></description></item><item><title>Bypass UAC Using DelegateExecute</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_bypass_uac_using_delegateexecute.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_bypass_uac_using_delegateexecute.yml/</guid><description>&lt;p>Bypasses User Account Control using a fileless method&lt;/p></description></item><item><title>Bypass UAC Using SilentCleanup Task</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_bypass_uac_using_silentcleanup_task.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_bypass_uac_using_silentcleanup_task.yml/</guid><description>&lt;p>There is an auto-elevated task called SilentCleanup located in %windir%\system32\cleanmgr.exe This can be abused to elevate any file with Administrator privileges without prompting UAC&lt;/p></description></item><item><title>Disable UAC Using Registry</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_disable_uac_registry.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_disable_uac_registry.yml/</guid><description>&lt;p>Disable User Account Conrol (UAC) by changing its registry key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\EnableLUA from 1 to 0&lt;/p></description></item><item><title>Empire PowerShell UAC Bypass</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_susp_powershell_empire_uac_bypass.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_susp_powershell_empire_uac_bypass.yml/</guid><description>&lt;p>Detects some Empire PowerShell UAC bypass methods&lt;/p></description></item><item><title>High Integrity Sdclt Process</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_high_integrity_sdclt.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_high_integrity_sdclt.yml/</guid><description>&lt;p>A General detection for sdclt being spawned as an elevated process. This could be an indicator of sdclt being used for bypass UAC techniques.&lt;/p></description></item><item><title>Load Undocumented Autoelevated COM Interface</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/proc_access_win_load_undocumented_autoelevated_com_interface.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_access/proc_access_win_load_undocumented_autoelevated_com_interface.yml/</guid><description>&lt;p>COM interface (EditionUpgradeManager) that is not used by standard executables.&lt;/p></description></item><item><title>Sdclt Child Processes</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_sdclt_child_process.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/process_creation/proc_creation_win_sdclt_child_process.yml/</guid><description>&lt;p>A General detection for sdclt spawning new processes. This could be an indicator of sdclt being used for bypass UAC techniques.&lt;/p></description></item><item><title>UAC Bypass Via Wsreset</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_bypass_via_wsreset.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/registry_event/registry_event_bypass_via_wsreset.yml/</guid><description>&lt;p>Unfixed method for UAC bypass from windows 10. WSReset.exe file associated with the Windows Store. It will run a binary file contained in a low-privilege registry.&lt;/p></description></item><item><title>UAC Bypass With Fake DLL</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_uac_bypass_via_dism.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/image_load/image_load_uac_bypass_via_dism.yml/</guid><description>&lt;p>Attempts to load dismcore.dll after dropping it&lt;/p></description></item></channel></rss>