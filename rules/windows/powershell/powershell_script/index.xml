<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>powershell_script on My New Hugo Site</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/</link><description>Recent content in powershell_script on My New Hugo Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 12 Feb 2022 15:53:13 +0100</lastBuildDate><atom:link href="https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/index.xml" rel="self" type="application/rss+xml"/><item><title>DirectorySearcher Powershell Exploitation</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_directorysearcher.yml/</link><pubDate>Sat, 12 Feb 2022 15:53:13 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_directorysearcher.yml/</guid><description>&lt;p>Enumerates Active Directory to determine computers that are joined to the domain&lt;/p></description></item><item><title>Change User Agents with WebRequest</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_invoke_webrequest_useragent.yml/</link><pubDate>Sun, 23 Jan 2022 16:37:59 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_invoke_webrequest_useragent.yml/</guid><description>&lt;p>Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic.
Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server.&lt;/p></description></item><item><title>Suspicious SSL Connection</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_ssl_keyword.yml/</link><pubDate>Sun, 23 Jan 2022 11:37:01 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_ssl_keyword.yml/</guid><description>&lt;p>Adversaries may employ a known encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol.&lt;/p></description></item><item><title>Testing Usage of Uncommonly Used Port</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_test_netconnection.yml/</link><pubDate>Sun, 23 Jan 2022 11:37:01 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_test_netconnection.yml/</guid><description>&lt;p>Adversaries may communicate using a protocol and port paring that are typically not associated.
For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443.&lt;/p></description></item><item><title>Suspicious Start-Process PassThru</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_start_process.yml/</link><pubDate>Sat, 15 Jan 2022 17:04:03 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_start_process.yml/</guid><description>&lt;p>Powershell use PassThru option to start in background&lt;/p></description></item><item><title>Suspicious Unblock-File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_unblock_file.yml/</link><pubDate>Sat, 15 Jan 2022 17:04:03 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_unblock_file.yml/</guid><description>&lt;p>Remove the Zone.Identifier alternate data stream which identifies the file as downloaded from the internet.&lt;/p></description></item><item><title>Use Remove-Item to Delete File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_remove_item_path.yml/</link><pubDate>Sat, 15 Jan 2022 17:04:03 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_remove_item_path.yml/</guid><description>&lt;p>Powershell Remove-Item with -Path to delete a file or a folder with &amp;ldquo;-Recurse&amp;rdquo;&lt;/p></description></item><item><title>Create Volume Shadow Copy with Powershell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_create_volume_shadow_copy.yml/</link><pubDate>Wed, 12 Jan 2022 20:27:56 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_create_volume_shadow_copy.yml/</guid><description>&lt;p>Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information&lt;/p></description></item><item><title>Suspicious Get-WmiObject</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_gwmi.yml/</link><pubDate>Wed, 12 Jan 2022 20:27:56 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_gwmi.yml/</guid><description>&lt;p>The infrastructure for management data and operations that enables local and remote management of Windows personal computers and servers&lt;/p></description></item><item><title>Registry-Free Process Scope COR_PROFILER</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cor_profiler.yml/</link><pubDate>Thu, 30 Dec 2021 11:58:10 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cor_profiler.yml/</guid><description>&lt;p>Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR.
The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR).
These profiliers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.
(Citation: Microsoft Profiling Mar 2017)
(Citation: Microsoft COR_PROFILER Feb 2013)&lt;/p></description></item><item><title>Service Registry Permissions Weakness Check</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_get_acl_service.yml/</link><pubDate>Thu, 30 Dec 2021 11:58:10 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_get_acl_service.yml/</guid><description>&lt;p>Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services.
Adversaries may use flaws in the permissions for registry to redirect from the originally specified executable to one that they control, in order to launch their own code at Service start.
Windows stores local service configuration information in the Registry under HKLM\SYSTEM\CurrentControlSet\Services&lt;/p></description></item><item><title>Code Executed Via Office Add-in XLL File</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_office_comobject_registerxll.yml/</link><pubDate>Wed, 29 Dec 2021 17:47:43 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_office_comobject_registerxll.yml/</guid><description>&lt;p>Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.
Office add-ins can be used to add functionality to Office programs&lt;/p></description></item><item><title>Manipulation of User Computer or Group Security Principals Across AD</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_directoryservices_accountmanagement.yml/</link><pubDate>Wed, 29 Dec 2021 17:47:43 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_directoryservices_accountmanagement.yml/</guid><description>&lt;p>Adversaries may create a domain account to maintain access to victim systems.
Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain..&lt;/p></description></item><item><title>Powershell Create Scheduled Task</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cmdlet_scheduled_task.yml/</link><pubDate>Wed, 29 Dec 2021 17:47:43 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cmdlet_scheduled_task.yml/</guid><description>&lt;p>Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code&lt;/p></description></item><item><title>Powershell LocalAccount Manipulation</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_localuser.yml/</link><pubDate>Wed, 29 Dec 2021 17:47:43 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_localuser.yml/</guid><description>&lt;p>Adversaries may manipulate accounts to maintain access to victim systems.
Account manipulation may consist of any action that preserves adversary access to a compromised account, such as modifying credentials or permission groups&lt;/p></description></item><item><title>Request A Single Ticket via PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_request_kerberos_ticket.yml/</link><pubDate>Wed, 29 Dec 2021 17:47:43 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_request_kerberos_ticket.yml/</guid><description>&lt;p>utilize native PowerShell Identity modules to query the domain to extract the Service Principal Names for a single computer.
This behavior is typically used during a kerberos or silver ticket attack.
A successful execution will output the SPNs for the endpoint in question.&lt;/p></description></item><item><title>Windows Screen Capture with CopyFromScreen</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_capture_screenshots.yml/</link><pubDate>Wed, 29 Dec 2021 17:47:43 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_capture_screenshots.yml/</guid><description>&lt;p>Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation.
Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations&lt;/p></description></item><item><title>Powershell Install a DLL in System32</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_copy_item_system32.yml/</link><pubDate>Mon, 27 Dec 2021 20:25:01 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_copy_item_system32.yml/</guid><description>&lt;p>Uses PowerShell to install a DLL in System32&lt;/p></description></item><item><title>Suspicious Connection to Remote Account</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_networkcredential.yml/</link><pubDate>Mon, 27 Dec 2021 20:25:01 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_networkcredential.yml/</guid><description>&lt;p>Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts.
Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism&lt;/p></description></item><item><title>Delete Volume Shadow Copies via WMI with PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_win32_shadowcopy.yml/</link><pubDate>Sun, 26 Dec 2021 12:09:42 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_win32_shadowcopy.yml/</guid><description>&lt;p>Deletes Windows Volume Shadow Copies with PowerShell code and Get-WMIObject. This technique is used by numerous ransomware families such as Sodinokibi/REvil&lt;/p></description></item><item><title>Remove Account From Domain Admin Group</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_remove_adgroupmember.yml/</link><pubDate>Sun, 26 Dec 2021 12:09:42 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_remove_adgroupmember.yml/</guid><description>&lt;p>Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users.
Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.&lt;/p></description></item><item><title>Replace Desktop Wallpaper by Powershell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_wallpaper.yml/</link><pubDate>Sun, 26 Dec 2021 12:09:42 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_wallpaper.yml/</guid><description>&lt;p>An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users.
This may take the form of modifications to internal websites, or directly to user systems with the replacement of the desktop wallpaper&lt;/p></description></item><item><title>Accessing Encrypted Credentials from Google Chrome Login Database</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_access_to_chrome_login_data.yml/</link><pubDate>Mon, 20 Dec 2021 10:43:32 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_access_to_chrome_login_data.yml/</guid><description>&lt;p>Adversaries may acquire credentials from web browsers by reading files specific to the target browser.
Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future.
Web browsers typically store the credentials in an encrypted format within a credential store.&lt;/p></description></item><item><title>Dump Credentials from Windows Credential Manager With PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_dump_password_windows_credential_manager.yml/</link><pubDate>Mon, 20 Dec 2021 10:43:32 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_dump_password_windows_credential_manager.yml/</guid><description>&lt;p>Adversaries may search for common password storage locations to obtain user credentials.
Passwords are stored in several places on a system, depending on the operating system or application holding the credentials.&lt;/p></description></item><item><title>Enumerate Credentials from Windows Credential Manager With PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_enumerate_password_windows_credential_manager.yml/</link><pubDate>Mon, 20 Dec 2021 10:43:32 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_enumerate_password_windows_credential_manager.yml/</guid><description>&lt;p>Adversaries may search for common password storage locations to obtain user credentials.
Passwords are stored in several places on a system, depending on the operating system or application holding the credentials.&lt;/p></description></item><item><title>Extracting Information with PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_extracting.yml/</link><pubDate>Sun, 19 Dec 2021 11:20:42 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_extracting.yml/</guid><description>&lt;p>Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials.
These can be files created by users to store their own credentials, shared credential stores for a group of individuals,
configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.&lt;/p></description></item><item><title>Security Software Discovery by Powershell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_security_software_discovery.yml/</link><pubDate>Thu, 16 Dec 2021 10:32:45 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_security_software_discovery.yml/</guid><description>&lt;p>Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.
This may include things such as firewall rules and anti-viru&lt;/p></description></item><item><title>Powershell File and Directory Discovery</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_file_and_directory_discovery.yml/</link><pubDate>Wed, 15 Dec 2021 19:36:16 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_file_and_directory_discovery.yml/</guid><description>&lt;p>Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.
Adversaries may use the information from &lt;a href="https://attack.mitre.org/techniques/T1083">File and Directory Discovery&lt;/a> during automated discovery to shape follow-on behaviors,
including whether or not the adversary fully infects the target and/or attempts specific actions.&lt;/p></description></item><item><title>Suspicious Get Information for AD Groups or DoesNotRequirePreAuth User</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_ad_group_reco.yml/</link><pubDate>Wed, 15 Dec 2021 19:36:16 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_ad_group_reco.yml/</guid><description>&lt;p>Adversaries may attempt to find domain-level groups and permission settings.
The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.&lt;/p></description></item><item><title>Suspicious Get Information for SMB Share</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_smb_share_reco.yml/</link><pubDate>Wed, 15 Dec 2021 19:36:16 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_smb_share_reco.yml/</guid><description>&lt;p>Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and
to identify potential systems of interest for Lateral Movement.
Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network.&lt;/p></description></item><item><title>Automated Collection Bookmarks Using Get-ChildItem PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_get_childitem_bookmarks.yml/</link><pubDate>Mon, 13 Dec 2021 11:02:33 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_get_childitem_bookmarks.yml/</guid><description>&lt;p>Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
internal network resources such as servers, tools/dashboards, or other related infrastructure.&lt;/p></description></item><item><title>Suspicious Get Local Groups Information</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_local_group_reco.yml/</link><pubDate>Sun, 12 Dec 2021 12:15:27 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_local_group_reco.yml/</guid><description>&lt;p>Adversaries may attempt to find local system groups and permission settings.
The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group.
Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.&lt;/p></description></item><item><title>Clearing Windows Console History</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_clearing_windows_console_history.yml/</link><pubDate>Thu, 25 Nov 2021 19:04:30 -0600</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_clearing_windows_console_history.yml/</guid><description>&lt;p>Identifies when a user attempts to clear console history. An adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion.&lt;/p></description></item><item><title>AzureHound PowerShell Commands</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_azurehound_commands.yml/</link><pubDate>Sat, 23 Oct 2021 18:27:36 -0500</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_azurehound_commands.yml/</guid><description>&lt;p>Detects the execution of AzureHound in PowerShell, a tool to gather data from Azure for BloodHound&lt;/p></description></item><item><title>Suspicious PowerShell WindowStyle Option</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_windowstyle.yml/</link><pubDate>Wed, 20 Oct 2021 13:57:24 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_windowstyle.yml/</guid><description>&lt;p>Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden&lt;/p></description></item><item><title>Windows Firewall Profile Disabled</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_windows_firewall_profile_disabled.yml/</link><pubDate>Tue, 12 Oct 2021 11:56:37 -0500</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_windows_firewall_profile_disabled.yml/</guid><description>&lt;p>Detects when a user disables the Windows Firewall via a Profile to help evade defense.&lt;/p></description></item><item><title>Live Memory Dump Using Powershell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_memorydump_getstoragediagnosticinfo.yml/</link><pubDate>Tue, 21 Sep 2021 14:55:50 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_memorydump_getstoragediagnosticinfo.yml/</guid><description>&lt;p>Detects usage of a PowerShell command to dump the live memory of a Windows machine&lt;/p></description></item><item><title>Powershell Suspicious Win32_PnPEntity</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_win32_pnpentity.yml/</link><pubDate>Mon, 23 Aug 2021 13:17:35 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_win32_pnpentity.yml/</guid><description>&lt;p>Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;/p></description></item><item><title>Powershell Trigger Profiles by Add_Content</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_trigger_profiles.yml/</link><pubDate>Wed, 18 Aug 2021 14:29:50 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_trigger_profiles.yml/</guid><description>&lt;p>Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.&lt;/p></description></item><item><title>Malicious ShellIntel PowerShell Commandlets</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_shellintel_malicious_commandlets.yml/</link><pubDate>Mon, 16 Aug 2021 09:10:05 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_shellintel_malicious_commandlets.yml/</guid><description>&lt;p>Detects Commandlet names from ShellIntel exploitation scripts.&lt;/p></description></item><item><title>PrintNightmare Powershell Exploitation</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_nightmare.yml/</link><pubDate>Mon, 16 Aug 2021 09:10:05 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_nightmare.yml/</guid><description>&lt;p>Detects Commandlet name for PrintNightmare exploitation.&lt;/p></description></item><item><title>Powershell Keylogging</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_keylogging.yml/</link><pubDate>Fri, 30 Jul 2021 08:28:19 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_keylogging.yml/</guid><description>&lt;p>Adversaries may log user keystrokes to intercept credentials as the user types them.&lt;/p></description></item><item><title>Automated Collection Command PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_automated_collection.yml/</link><pubDate>Wed, 28 Jul 2021 13:17:40 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_automated_collection.yml/</guid><description>&lt;p>Once established within a system or network, an adversary may use automated techniques for collecting internal data.&lt;/p></description></item><item><title>Recon Information for Export with PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_recon.yml/</link><pubDate>Wed, 28 Jul 2021 13:17:40 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_recon.yml/</guid><description>&lt;p>Once established within a system or network, an adversary may use automated techniques for collecting internal data&lt;/p></description></item><item><title>Powershell Local Email Collection</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_mail_acces.yml/</link><pubDate>Wed, 21 Jul 2021 15:27:12 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_mail_acces.yml/</guid><description>&lt;p>Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user’s local system, such as Outlook storage or cache files.&lt;/p></description></item><item><title>Zip A Folder With PowerShell For Staging In Temp</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_zip_compress.yml/</link><pubDate>Tue, 20 Jul 2021 13:13:53 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_susp_zip_compress.yml/</guid><description>&lt;p>Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration&lt;/p></description></item><item><title>PowerShell ADRecon Execution</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_adrecon_execution.yml/</link><pubDate>Fri, 16 Jul 2021 12:58:47 +0545</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_adrecon_execution.yml/</guid><description>&lt;p>Detects execution of ADRecon.ps1 for AD reconnaissance which has been reported to be actively used by FIN7&lt;/p></description></item><item><title>Malicious PowerView PowerShell Commandlets</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_powerview_malicious_commandlets.yml/</link><pubDate>Tue, 25 May 2021 21:04:32 +0545</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_powerview_malicious_commandlets.yml/</guid><description>&lt;p>Detects Commandlet names from PowerView of PowerSploit exploitation framework.&lt;/p></description></item><item><title>PowerShell Create Local User</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_create_local_user.yml/</link><pubDate>Sat, 11 Apr 2020 02:51:05 -0600</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_create_local_user.yml/</guid><description>&lt;p>Detects creation of a local user via PowerShell&lt;/p></description></item><item><title>WMImplant Hack Tool</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_wmimplant.yml/</link><pubDate>Fri, 27 Mar 2020 15:08:35 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_wmimplant.yml/</guid><description>&lt;p>Detects parameters used by WMImplant&lt;/p></description></item><item><title>Dnscat Execution</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_dnscat_execution.yml/</link><pubDate>Fri, 25 Oct 2019 04:30:55 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_dnscat_execution.yml/</guid><description>&lt;p>Dnscat exfiltration tool execution&lt;/p></description></item><item><title>Winlogon Helper DLL</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_winlogon_helper_dll.yml/</link><pubDate>Thu, 24 Oct 2019 16:33:29 +0300</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_winlogon_helper_dll.yml/</guid><description>&lt;p>Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\Software[Wow6432Node]Microsoft\Windows NT\CurrentVersion\Winlogon\ and HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables.&lt;/p></description></item><item><title>Data Compressed - PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_data_compressed.yml/</link><pubDate>Tue, 22 Oct 2019 14:00:52 +0300</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_data_compressed.yml/</guid><description>&lt;p>An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network.&lt;/p></description></item><item><title>Malicious Nishang PowerShell Commandlets</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_nishang_malicious_commandlets.yml/</link><pubDate>Thu, 16 May 2019 17:51:45 +0300</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_nishang_malicious_commandlets.yml/</guid><description>&lt;p>Detects Commandlet names and arguments from the Nishang exploitation framework&lt;/p></description></item><item><title>Suspicious PowerShell Keywords</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_keywords.yml/</link><pubDate>Mon, 11 Feb 2019 13:02:33 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_keywords.yml/</guid><description>&lt;p>Detects keywords that could indicate the use of some PowerShell exploitation framework&lt;/p></description></item><item><title>PowerShell ShellCode</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_shellcode_b64.yml/</link><pubDate>Sat, 17 Nov 2018 09:10:09 +0100</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_shellcode_b64.yml/</guid><description>&lt;p>Detects Base64 encoded Shellcode&lt;/p></description></item><item><title>NTFS Alternate Data Stream</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_ntfs_ads_access.yml/</link><pubDate>Tue, 24 Jul 2018 19:49:08 +0200</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_ntfs_ads_access.yml/</guid><description>&lt;p>Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.&lt;/p></description></item><item><title>Accessing WinAPI in PowerShell</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_accessing_win_api.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_accessing_win_api.yml/</guid><description>&lt;p>Detecting use WinAPI Functions in PowerShell&lt;/p></description></item><item><title>Detected Windows Software Discovery</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_software_discovery.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_software_discovery.yml/</guid><description>&lt;p>Adversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable.&lt;/p></description></item><item><title>Enable Windows Remote Management</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_enable_psremoting.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_enable_psremoting.yml/</guid><description>&lt;p>Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.&lt;/p></description></item><item><title>Execute Invoke-command on Remote Host</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_command_remote.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_command_remote.yml/</guid><description>&lt;p>Adversaries may use Valid Accounts to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.&lt;/p></description></item><item><title>Execution via CL_Invocation.ps1</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_invocation_lolscript.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_invocation_lolscript.yml/</guid><description>&lt;p>Detects Execution via SyncInvoke in CL_Invocation.ps1 module&lt;/p></description></item><item><title>Execution via CL_Invocation.ps1 (2 Lines)</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_invocation_lolscript_count.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_invocation_lolscript_count.yml/</guid><description>&lt;p>Detects Execution via SyncInvoke in CL_Invocation.ps1 module&lt;/p></description></item><item><title>Execution via CL_Mutexverifiers.ps1</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_mutexverifiers_lolscript.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_mutexverifiers_lolscript.yml/</guid><description>&lt;p>Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module&lt;/p></description></item><item><title>Execution via CL_Mutexverifiers.ps1 (2 Lines)</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_mutexverifiers_lolscript_count.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_cl_mutexverifiers_lolscript_count.yml/</guid><description>&lt;p>Detects Execution via runAfterCancelProcess in CL_Mutexverifiers.ps1 module&lt;/p></description></item><item><title>Invoke-Obfuscation CLIP+ Launcher</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_clip.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_clip.yml/</guid><description>&lt;p>Detects Obfuscated use of Clip.exe to execute PowerShell&lt;/p></description></item><item><title>Invoke-Obfuscation COMPRESS OBFUSCATION</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_compress.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_compress.yml/</guid><description>&lt;p>Detects Obfuscated Powershell via COMPRESS OBFUSCATION&lt;/p></description></item><item><title>Invoke-Obfuscation RUNDLL LAUNCHER</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_rundll.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_rundll.yml/</guid><description>&lt;p>Detects Obfuscated Powershell via RUNDLL LAUNCHER&lt;/p></description></item><item><title>Invoke-Obfuscation STDIN+ Launcher</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_stdin.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_stdin.yml/</guid><description>&lt;p>Detects Obfuscated use of stdin to execute PowerShell&lt;/p></description></item><item><title>Invoke-Obfuscation VAR+ Launcher</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_var.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_var.yml/</guid><description>&lt;p>Detects Obfuscated use of Environment Variables to execute PowerShell&lt;/p></description></item><item><title>Invoke-Obfuscation VAR++ LAUNCHER OBFUSCATION</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_var.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_var.yml/</guid><description>&lt;p>Detects Obfuscated Powershell via VAR++ LAUNCHER&lt;/p></description></item><item><title>Invoke-Obfuscation Via Stdin</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_stdin.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_stdin.yml/</guid><description>&lt;p>Detects Obfuscated Powershell via Stdin in Scripts&lt;/p></description></item><item><title>Invoke-Obfuscation Via Use Clip</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_use_clip.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_use_clip.yml/</guid><description>&lt;p>Detects Obfuscated Powershell via use Clip.exe in Scripts&lt;/p></description></item><item><title>Invoke-Obfuscation Via Use MSHTA</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_use_mhsta.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_use_mhsta.yml/</guid><description>&lt;p>Detects Obfuscated Powershell via use MSHTA in Scripts&lt;/p></description></item><item><title>Invoke-Obfuscation Via Use Rundll32</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_use_rundll32.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_invoke_obfuscation_via_use_rundll32.yml/</guid><description>&lt;p>Detects Obfuscated Powershell via use Rundll32 in Scripts&lt;/p></description></item><item><title>Malicious PowerShell Commandlets</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_malicious_commandlets.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_malicious_commandlets.yml/</guid><description>&lt;p>Detects Commandlet names from well-known PowerShell exploitation frameworks&lt;/p></description></item><item><title>Malicious PowerShell Keywords</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_malicious_keywords.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_malicious_keywords.yml/</guid><description>&lt;p>Detects keywords from well-known PowerShell exploitation frameworks&lt;/p></description></item><item><title>PowerShell Credential Prompt</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_prompt_credentials.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_prompt_credentials.yml/</guid><description>&lt;p>Detects PowerShell calling a credential prompt&lt;/p></description></item><item><title>PowerShell Deleted Mounted Share</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_mounted_share_deletion.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_mounted_share_deletion.yml/</guid><description>&lt;p>Detects when when a mounted share is removed. Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation&lt;/p></description></item><item><title>Powershell Detect Virtualization Environment</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_detect_vm_env.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_detect_vm_env.yml/</guid><description>&lt;p>Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox&lt;/p></description></item><item><title>Powershell Execute Batch Script</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_execute_batch_script.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_execute_batch_script.yml/</guid><description>&lt;p>Adversaries may abuse the Windows command shell for execution.
The Windows command shell (&lt;a href="https://attack.mitre.org/software/S0106">cmd&lt;/a>) is the primary command prompt on Windows systems.
The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands.
Batch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops.
Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple system&lt;/p></description></item><item><title>Powershell Exfiltration Over SMTP</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_send_mailmessage.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_send_mailmessage.yml/</guid><description>&lt;p>Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.
The data may also be sent to an alternate network location from the main command and control server.&lt;/p></description></item><item><title>PowerShell Get-Process LSASS in ScriptBlock</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_getprocess_lsass.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_getprocess_lsass.yml/</guid><description>&lt;p>Detects a Get-Process command on lsass process, which is in almost all cases a sign of malicious activity&lt;/p></description></item><item><title>PowerShell ICMP Exfiltration</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_icmp_exfiltration.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_icmp_exfiltration.yml/</guid><description>&lt;p>Detects Exfiltration Over Alternative Protocol - ICMP. Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel.&lt;/p></description></item><item><title>Powershell MsXml COM Object</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_msxml_com.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_msxml_com.yml/</guid><description>&lt;p>Adversaries may abuse PowerShell commands and scripts for execution.
PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell)
Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code&lt;/p></description></item><item><title>PowerShell PSAttack</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_psattack.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_psattack.yml/</guid><description>&lt;p>Detects the use of PSAttack PowerShell hack tool&lt;/p></description></item><item><title>PowerShell Remote Session Creation</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_remote_session_creation.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_remote_session_creation.yml/</guid><description>&lt;p>Adversaries may abuse PowerShell commands and scripts for execution.
PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system&lt;/p></description></item><item><title>Powershell Store File In Alternate Data Stream</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_store_file_in_alternate_data_stream.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_store_file_in_alternate_data_stream.yml/</guid><description>&lt;p>Storing files in Alternate Data Stream (ADS) similar to Astaroth malware.&lt;/p></description></item><item><title>Powershell Timestomp</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_timestomp.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_timestomp.yml/</guid><description>&lt;p>Adversaries may modify file time attributes to hide new or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder.&lt;/p></description></item><item><title>Powershell XML Execute Command</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_xml_iex.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_xml_iex.yml/</guid><description>&lt;p>Adversaries may abuse PowerShell commands and scripts for execution.
PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell)
Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code&lt;/p></description></item><item><title>Root Certificate Installed</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_root_certificate_installed.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_root_certificate_installed.yml/</guid><description>&lt;p>Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers.&lt;/p></description></item><item><title>Suspicious Export-PfxCertificate</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_export_pfxcertificate.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_export_pfxcertificate.yml/</guid><description>&lt;p>Detects Commandlet that is used to export certificates from the local certificate store and sometimes used by threat actors to steal private keys from compromised machines&lt;/p></description></item><item><title>Suspicious Get-ADReplAccount</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_get_adreplaccount.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_get_adreplaccount.yml/</guid><description>&lt;p>The DSInternals PowerShell Module exposes several internal features of Active Directory and Azure Active Directory. These include FIDO2 and NGC key auditing, offline ntds.dit file manipulation, password auditing, DC recovery from IFM backups and password hash calculation.&lt;/p></description></item><item><title>Suspicious Invoke-Item From Mount-DiskImage</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_run_from_mount_diskimage.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_run_from_mount_diskimage.yml/</guid><description>&lt;p>Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW.&lt;/p></description></item><item><title>Suspicious IO.FileStream</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_iofilestream.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_iofilestream.yml/</guid><description>&lt;p>Open a handle on the drive volume via the \.\ DOS device path specifier and perform direct access read of the first few bytes of the volume.&lt;/p></description></item><item><title>Suspicious Mount-DiskImage</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_mount_diskimage.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_mount_diskimage.yml/</guid><description>&lt;p>Adversaries may abuse container files such as disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW.&lt;/p></description></item><item><title>Suspicious New-PSDrive to Admin Share</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_new_psdrive.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_suspicious_new_psdrive.yml/</guid><description>&lt;p>Adversaries may use to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.&lt;/p></description></item><item><title>Windows PowerShell Upload Web Request</title><link>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_upload.yml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bradleyjkemp.dev/sigmadoc/rules/windows/powershell/powershell_script/posh_ps_upload.yml/</guid><description>&lt;p>Detects the use of various web request POST or PUT methods (including aliases) via Windows PowerShell command&lt;/p></description></item></channel></rss>